/*
 * TODO(Студент): Опишите процесс создания базы данных
 * 1. Создайте все таблицы, согласно предложенной диаграмме.
 * 2. Опишите все необходимые отношения между таблицами.
 * 3. Добавьте в каждую таблицу минимум три записи.
 */
CREATE TABLE Roles (
id INTEGER UNIQUE GENERATED ALWAYS AS IDENTITY,
name VARCHAR(255) PRIMARY KEY
);

CREATE TABLE supplier (
id INTEGER UNIQUE GENERATED ALWAYS AS IDENTITY,
name VARCHAR(255) PRIMARY KEY,
address VARCHAR(255),
phone VARCHAR(255),
representative VARCHAR(255)
);

CREATE TABLE Userinfo (
id INTEGER PRIMARY KEY,
name VARCHAR(255) NOT NULL,
surname VARCHAR (255) NOT NULL
);

CREATE TABLE "USER" (
ID INTEGER UNIQUE GENERATED ALWAYS AS IDENTITY,
EMAIL VARCHAR(255) PRIMARY KEY,
PASSWORD VARCHAR(255),
INFO INTEGER UNIQUE,
"ROLE" INTEGER,
CONSTRAINT FK_USERINFO FOREIGN KEY (INFO) REFERENCES USERINFO(ID),
CONSTRAINT FK_ROLE FOREIGN KEY ("ROLE") REFERENCES ROLES(ID)
);

CREATE TABLE PRODUCT (
ID INTEGER UNIQUE GENERATED ALWAYS AS IDENTITY,
CODE VARCHAR(255) PRIMARY KEY,
TITLE VARCHAR (255),
SUPPLIER INTEGER,
INITIAL_PRICE DOUBLE,
RETAIL_VALUE DOUBLE,
CONSTRAINT FK_SUPPLIER FOREIGN KEY (SUPPLIER) REFERENCES SUPPLIER(ID)
);

CREATE TABLE "ORDER" (
ID INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
"USER" INTEGER,
CONSTRAINT FK_USER FOREIGN KEY ("USER") REFERENCES "USER"(ID),
CREATED TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE ORDER2PRODUCT (
"ORDER" INTEGER,
PRODUCT INTEGER,
CONSTRAINT PK PRIMARY KEY ("ORDER", PRODUCT),
QUANTITY INTEGER,
CONSTRAINT FK_ORDER FOREIGN KEY ("ORDER") REFERENCES "ORDER"(ID),
CONSTRAINT FK_PRODUCT FOREIGN KEY (PRODUCT) REFERENCES PRODUCT(ID)
);

INSERT INTO SUPPLIER ("NAME", ADDRESS, PHONE, REPRESENTATIVE)
VALUES ('HUAWEI', 'CHINA, SHANGHAI', '123-500-800', 'JACKY CHAN');